package rs.ac.uns.ftn.informatika.rabbitmq;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.atomic.AtomicInteger;

@Service
public class LocationSimulatorService {

    @Autowired
    private Producer producer;


    public void simulateRoute(String queue,int period) {
        List<Coordinate> simulatedRoute = generateSimulatedRoute();

        // Schedule sending coordinates with a specified frequency
        ScheduledExecutorService executorService = Executors.newScheduledThreadPool(1);
        AtomicInteger index = new AtomicInteger(0);

        executorService.scheduleAtFixedRate(() -> {
            if (index.get() < simulatedRoute.size()) {
                sendCoordinates(simulatedRoute.get(index.getAndIncrement()), queue);
            }
        }, 0, period, TimeUnit.SECONDS);
    }

    private List<Coordinate> generateSimulatedRoute() {
        double[] start = {45.27269690979444, 19.836823940277103};
        double[] end = {45.2396, 19.8227};
        int steps = 50;

        List<Coordinate> interpolatedCoordinates = new ArrayList<>();

        interpolatedCoordinates.add(new Coordinate(45.27235834935693, 19.836890027341525)); interpolatedCoordinates.add(new Coordinate(45.27237344992516, 19.837147362421128)); interpolatedCoordinates.add(new Coordinate(45.27239610077004, 19.83755480963054)); interpolatedCoordinates.add(new Coordinate(45.27244895270617, 19.83800514601988)); interpolatedCoordinates.add(new Coordinate(45.27250935485861, 19.838251758804514)); interpolatedCoordinates.add(new Coordinate(45.272524455386694, 19.83856270535906)); interpolatedCoordinates.add(new Coordinate(45.272539555910754, 19.83898087486344)); interpolatedCoordinates.add(new Coordinate(45.27258485745881, 19.839366877482867)); interpolatedCoordinates.add(new Coordinate(45.27266035995856, 19.839849380757165)); interpolatedCoordinates.add(new Coordinate(45.272690560930315, 19.840267550261547)); interpolatedCoordinates.add(new Coordinate(45.27274341259223, 19.840589219111063)); interpolatedCoordinates.add(new Coordinate(45.27275851305802, 19.840835831895696)); interpolatedCoordinates.add(new Coordinate(45.272781163749194, 19.841114611565285)); interpolatedCoordinates.add(new Coordinate(45.27262260872124, 19.841254001400085)); interpolatedCoordinates.add(new Coordinate(45.27215449129229, 19.841382668939904)); interpolatedCoordinates.add(new Coordinate(45.27192043112991, 19.84146844729976)); interpolatedCoordinates.add(new Coordinate(45.27136925338619, 19.841682893199476)); interpolatedCoordinates.add(new Coordinate(45.2712031439754, 19.841715060084432)); interpolatedCoordinates.add(new Coordinate(45.27104458453887, 19.84180083844429)); interpolatedCoordinates.add(new Coordinate(45.27085582272734, 19.841897339099155)); interpolatedCoordinates.add(new Coordinate(45.27070481282611, 19.841950950574056)); interpolatedCoordinates.add(new Coordinate(45.270289533526, 19.8422082856537)); interpolatedCoordinates.add(new Coordinate(45.269738339943906, 19.84227261942361)); interpolatedCoordinates.add(new Coordinate(45.269557124446365, 19.842315508603537)); interpolatedCoordinates.add(new Coordinate(45.269428763118896, 19.84240128696339)); interpolatedCoordinates.add(new Coordinate(45.26920224242107, 19.842465620733304)); interpolatedCoordinates.add(new Coordinate(45.26879450288686, 19.842647899748027)); interpolatedCoordinates.add(new Coordinate(45.268635936721424, 19.84272295581295)); interpolatedCoordinates.add(new Coordinate(45.26846226850819, 19.842798011877836)); interpolatedCoordinates.add(new Coordinate(45.26790350630404, 19.84307679154742)); interpolatedCoordinates.add(new Coordinate(45.267707183142726, 19.84309823613737)); interpolatedCoordinates.add(new Coordinate(45.2676241231393, 19.843141125317338)); interpolatedCoordinates.add(new Coordinate(45.267420248070145, 19.843216181382218)); interpolatedCoordinates.add(new Coordinate(45.26732963669324, 19.843216181382218)); interpolatedCoordinates.add(new Coordinate(45.26717106643565, 19.843291237447104)); interpolatedCoordinates.add(new Coordinate(45.26698229174188, 19.843366293511984)); interpolatedCoordinates.add(new Coordinate(45.26689167966589, 19.843419904986924)); interpolatedCoordinates.add(new Coordinate(45.26680106744527, 19.843430627281897)); interpolatedCoordinates.add(new Coordinate(45.26662739361807, 19.84345207187188)); interpolatedCoordinates.add(new Coordinate(45.266453719259516, 19.843591461706673)); interpolatedCoordinates.add(new Coordinate(45.26617432895907, 19.84366651777156)); interpolatedCoordinates.add(new Coordinate(45.26584963039574, 19.843891685966206)); interpolatedCoordinates.add(new Coordinate(45.26576656767424, 19.84383807449131)); interpolatedCoordinates.add(new Coordinate(45.265623095414455, 19.843902408261176)); interpolatedCoordinates.add(new Coordinate(45.265517378780494, 19.84394529744115)); interpolatedCoordinates.add(new Coordinate(45.26529084247333, 19.84396674203109)); interpolatedCoordinates.add(new Coordinate(45.26512471527351, 19.84396674203109)); interpolatedCoordinates.add(new Coordinate(45.26496613885656, 19.843923852851162)); interpolatedCoordinates.add(new Coordinate(45.26483021585348, 19.84389170558943)); interpolatedCoordinates.add(new Coordinate(45.26470184383652, 19.84390242788444)); interpolatedCoordinates.add(new Coordinate(45.26439223954245, 19.843880983294458)); interpolatedCoordinates.add(new Coordinate(45.26413549323739, 19.843763038049648)); interpolatedCoordinates.add(new Coordinate(45.26390140000611, 19.843784482639588)); interpolatedCoordinates.add(new Coordinate(45.2637956801659, 19.843795204934565)); interpolatedCoordinates.add(new Coordinate(45.263569136988195, 19.843784482639588)); interpolatedCoordinates.add(new Coordinate(45.26341055622589, 19.84372014886968)); interpolatedCoordinates.add(new Coordinate(45.26321421752554, 19.84363437050982)); interpolatedCoordinates.add(new Coordinate(45.262776228747086, 19.843505702970003)); interpolatedCoordinates.add(new Coordinate(45.26264785208548, 19.84360220362487)); interpolatedCoordinates.add(new Coordinate(45.262489268749775, 19.84363437050982)); interpolatedCoordinates.add(new Coordinate(45.26205882603418, 19.843570036739912)); interpolatedCoordinates.add(new Coordinate(45.2615604149806, 19.843411171178847)); interpolatedCoordinates.add(new Coordinate(45.2614018286074, 19.84336828199888)); interpolatedCoordinates.add(new Coordinate(45.26089585959835, 19.8431538360992)); interpolatedCoordinates.add(new Coordinate(45.26058623454803, 19.843132391509258)); interpolatedCoordinates.add(new Coordinate(45.26007270635179, 19.842928667904552)); interpolatedCoordinates.add(new Coordinate(45.25922688522801, 19.8425096938479)); interpolatedCoordinates.add(new Coordinate(45.25900787588082, 19.84242391548801)); interpolatedCoordinates.add(new Coordinate(45.25855475041156, 19.842241636473286)); interpolatedCoordinates.add(new Coordinate(45.258320634168996, 19.842134413523446)); interpolatedCoordinates.add(new Coordinate(45.25792792088478, 19.842005745983624)); interpolatedCoordinates.add(new Coordinate(45.2577164587606, 19.8418234669689)); interpolatedCoordinates.add(new Coordinate(45.25739926409774, 19.841716244019064)); interpolatedCoordinates.add(new Coordinate(45.25685549769624, 19.84153396500434)); interpolatedCoordinates.add(new Coordinate(45.256364593000285, 19.84153396500434)); interpolatedCoordinates.add(new Coordinate(45.256085153047145, 19.8416197433642)); interpolatedCoordinates.add(new Coordinate(45.25549605891121, 19.841726966314035)); interpolatedCoordinates.add(new Coordinate(45.25498248467831, 19.842016468278597)); interpolatedCoordinates.add(new Coordinate(45.25458974850244, 19.84226269513982)); interpolatedCoordinates.add(new Coordinate(45.254446247997116, 19.8423913626796)); interpolatedCoordinates.add(new Coordinate(45.254288843090336, 19.84240105177101)); interpolatedCoordinates.add(new Coordinate(45.25407736741432, 19.842186605871333)); interpolatedCoordinates.add(new Coordinate(45.25395652381734, 19.84190782620174)); interpolatedCoordinates.add(new Coordinate(45.25382057446334, 19.84171482489201)); interpolatedCoordinates.add(new Coordinate(45.253699730319916, 19.841135820962887)); interpolatedCoordinates.add(new Coordinate(45.25344293566133, 19.840642595393582)); interpolatedCoordinates.add(new Coordinate(45.253382513219975, 19.840492483263816)); interpolatedCoordinates.add(new Coordinate(45.253186139841596, 19.83980625638481)); interpolatedCoordinates.add(new Coordinate(45.25300487150501, 19.83950603212528)); interpolatedCoordinates.add(new Coordinate(45.25274807370445, 19.838819805246278)); interpolatedCoordinates.add(new Coordinate(45.25256680396967, 19.838390913446922)); interpolatedCoordinates.add(new Coordinate(45.25240063953785, 19.838176467547243)); interpolatedCoordinates.add(new Coordinate(45.252189156830596, 19.83774757574785)); interpolatedCoordinates.add(new Coordinate(45.2520532032458, 19.837533129848172)); interpolatedCoordinates.add(new Coordinate(45.25196256734178, 19.837254350178583)); interpolatedCoordinates.add(new Coordinate(45.25193235534164, 19.837104238048816)); interpolatedCoordinates.add(new Coordinate(45.25182661321458, 19.837104238048816)); interpolatedCoordinates.add(new Coordinate(45.25114683811352, 19.837383017718405)); interpolatedCoordinates.add(new Coordinate(45.25076918153245, 19.83755457443815)); interpolatedCoordinates.add(new Coordinate(45.250603011841235, 19.837704686567918)); interpolatedCoordinates.add(new Coordinate(45.250391522440204, 19.83781190951776)); interpolatedCoordinates.add(new Coordinate(45.2499534347472, 19.83811213377733)); interpolatedCoordinates.add(new Coordinate(45.2499534347472, 19.838155022957263)); interpolatedCoordinates.add(new Coordinate(45.24925853009646, 19.838498136396762)); interpolatedCoordinates.add(new Coordinate(45.24894128819018, 19.838626803936585)); interpolatedCoordinates.add(new Coordinate(45.248669365145986, 19.838755471476365)); interpolatedCoordinates.add(new Coordinate(45.24844276161471, 19.838905583606174)); interpolatedCoordinates.add(new Coordinate(45.24815572917734, 19.839077140325884)); interpolatedCoordinates.add(new Coordinate(45.24791401652612, 19.839270141635616)); interpolatedCoordinates.add(new Coordinate(45.247551445620694, 19.83944169835537)); interpolatedCoordinates.add(new Coordinate(45.24746080253274, 19.83957036589519)); interpolatedCoordinates.add(new Coordinate(45.24740037372707, 19.839591810485135)); interpolatedCoordinates.add(new Coordinate(45.2471737651333, 19.839720478024958)); interpolatedCoordinates.add(new Coordinate(45.24678097476253, 19.839956368514617)); interpolatedCoordinates.add(new Coordinate(45.24634285922163, 19.840235148184206)); interpolatedCoordinates.add(new Coordinate(45.245919847906926, 19.84036381572399)); interpolatedCoordinates.add(new Coordinate(45.24590474030173, 19.840385260313973)); interpolatedCoordinates.add(new Coordinate(45.24548052423925, 19.84062147757109)); interpolatedCoordinates.add(new Coordinate(45.24523880020431, 19.840771589700857)); interpolatedCoordinates.add(new Coordinate(45.24458916193195, 19.840997346592317)); interpolatedCoordinates.add(new Coordinate(45.24424923188024, 19.841276126261906)); interpolatedCoordinates.add(new Coordinate(45.243984840433804, 19.84152273904654)); interpolatedCoordinates.add(new Coordinate(45.243856421287255, 19.84154418363652)); interpolatedCoordinates.add(new Coordinate(45.24375066412506, 19.841104569542154)); interpolatedCoordinates.add(new Coordinate(45.24366756907381, 19.84057917708793)); interpolatedCoordinates.add(new Coordinate(45.24352404097173, 19.84001089545378)); interpolatedCoordinates.add(new Coordinate(45.2433654042265, 19.839614170539342)); interpolatedCoordinates.add(new Coordinate(45.24335029594194, 19.839260334804866)); interpolatedCoordinates.add(new Coordinate(45.24310100886404, 19.838562201696263)); interpolatedCoordinates.add(new Coordinate(45.24285927470404, 19.837425638427924)); interpolatedCoordinates.add(new Coordinate(45.242761069907736, 19.837200470233277)); interpolatedCoordinates.add(new Coordinate(45.24269308187239, 19.836632188599086)); interpolatedCoordinates.add(new Coordinate(45.24249667153543, 19.8361604076198)); interpolatedCoordinates.add(new Coordinate(45.242428683183675, 19.835999573195025)); interpolatedCoordinates.add(new Coordinate(45.242428683183675, 19.83572079352544)); interpolatedCoordinates.add(new Coordinate(45.24229270623608, 19.835377680085937)); interpolatedCoordinates.add(new Coordinate(45.242224717640205, 19.834991677466505)); interpolatedCoordinates.add(new Coordinate(45.242103848824506, 19.834573507962126)); interpolatedCoordinates.add(new Coordinate(45.241922545118754, 19.83362994600352)); interpolatedCoordinates.add(new Coordinate(45.24189232777823, 19.833329721743944)); interpolatedCoordinates.add(new Coordinate(45.241688360309205, 19.832761440109795)); interpolatedCoordinates.add(new Coordinate(45.24165058847531, 19.832525549620133)); interpolatedCoordinates.add(new Coordinate(45.241537272823, 19.83197871257593)); interpolatedCoordinates.add(new Coordinate(45.241446620138426, 19.83137826405682)); interpolatedCoordinates.add(new Coordinate(45.24137863053007, 19.83098153914242)); interpolatedCoordinates.add(new Coordinate(45.24122754222022, 19.83028458996845)); interpolatedCoordinates.add(new Coordinate(45.241084007953695, 19.829834253579108)); interpolatedCoordinates.add(new Coordinate(45.24098580008872, 19.82960908538442)); interpolatedCoordinates.add(new Coordinate(45.2408422652115, 19.829083692930194)); interpolatedCoordinates.add(new Coordinate(45.240562748883605, 19.828097241791664)); interpolatedCoordinates.add(new Coordinate(45.2405098672615, 19.827797017532088)); interpolatedCoordinates.add(new Coordinate(45.24030589496541, 19.82708366186867)); interpolatedCoordinates.add(new Coordinate(45.23998860305998, 19.826097210730097)); interpolatedCoordinates.add(new Coordinate(45.23995083009606, 19.825872042535448)); interpolatedCoordinates.add(new Coordinate(45.23987528409292, 19.825636152045785)); interpolatedCoordinates.add(new Coordinate(45.23979973798932, 19.825260871721326)); interpolatedCoordinates.add(new Coordinate(45.23973174641019, 19.824960647461793)); interpolatedCoordinates.add(new Coordinate(45.239618426930846, 19.824488866482472)); interpolatedCoordinates.add(new Coordinate(45.23960331764985, 19.82412430845303)); interpolatedCoordinates.add(new Coordinate(45.23954288054568, 19.823059118624165)); interpolatedCoordinates.add(new Coordinate(45.239588208424784, 19.82297334026427));

        return interpolatedCoordinates;
    }

    private void sendCoordinates(Coordinate coordinate, String queue) {
        String message = coordinate.getLongitude() + "|" + coordinate.getLatitude();
        producer.sendTo(queue, message);
    }

}
